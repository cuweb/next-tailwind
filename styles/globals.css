@tailwind base;

/*  */
/*  */
/* Things to add to RDS or cutheme? TBD */

/* .cu-panel + :not(.cu-panel),
:not(.cu-panel) + .cu-panel {
	@apply mt-6 md:mt-12;
}

.cu-container + :not(.cu-container) {
	@apply mt-5;
}

:not(.cu-container) + .cu-container {
	@apply -mt-6;
}

:not(.cu-column) + .cu-column {
	@apply my-10;
}

.cu-container {
	@apply py-0 lg:py-0;
} */

/*  */
/*  */
/* Things to add to cutheme */

/* .cutheme-spacing > .cu-container {
	@apply -mx-10;
}

.cutheme-spacing > :not(.cu-container):not(.cu-column) {
	@apply max-w-5xl mx-auto;
}

.cutheme-spacing > :not(.cu-container):not(.cu-column):first-child {
	@apply mt-12;
}

.cutheme-spacing > :not(.cu-container):not(.cu-column):last-child {
	@apply mb-16;
} */

/* const gutenStyleGroups = {
	// gutenbergSpacing: `[&>:not(.cu-container):not(.cu-column)]:px-12`,
	gutenbergSpacing: ``,
	gutenbergWidth: `[&>:not(.cu-container):not(.cu-column)]:max-w-5xl [&>:not(.cu-container):not(.cu-column)]:mx-auto`,
	gutenbergFirst: `first:[&>:not(.cu-container):not(.cu-column)]:mt-12`,
	gutenbergLast: `last:[&>:not(.cu-container):not(.cu-column)]:mb-16`,
};
export const gutenStyles = `${gutenStyleGroups.gutenbergSpacing} ${gutenStyleGroups.gutenbergWidth} ${gutenStyleGroups.gutenbergFirst} ${gutenStyleGroups.gutenbergLast}`; */

@tailwind components;
@tailwind utilities;

body {
	@apply relative;
}

body.open {
	@apply overflow-hidden;
}

.cu-slidenav {
	transition: transform 0.4s ease-in-out, visibility 0s 0.4s;
}

.cu-slidenav.open {
	@apply visible top-20 translate-y-0 lg:top-28;
	transition: transform 0.4s ease-in-out;
}

.cu-topnav-visible {
	transition: top 0.4s ease-in;
}

.cu-topnav-hidden {
	transition: top 0.6s ease-out;
}

/* Top Nav Button Animation */

.btn-nav {
	position: fixed;
	top: 30px;
	left: 30px;
	background: transparent;
	border: none;
	padding: 10px;
	cursor: pointer;
	z-index: 99999;
}

.btn-nav:focus {
	outline: 0;
}

.icon-bar {
	display: block;
	margin: 4px 0;
	width: 24px;
	height: 3px;
	background-color: #808080;
}

.btn-nav:hover .icon-bar {
	background-color: #808080;
}

.animated {
	display: block;
	margin: 8px auto 0;
}

.animated:hover .icon-bar,
.animated:focus .icon-bar {
	background-color: #fca311;
}

.animated:focus {
	cursor: pointer;
	z-index: 9999;
}

.middle {
	margin: 0 auto;
}

.icon-bar {
	-webkit-transition: all 0.7s ease;
	-moz-transition: all 0.7s ease;
	-ms-transition: all 0.7s ease;
	-o-transition: all 0.7s ease;
	transition: all 0.7s ease;
	z-index: 999999;
}

.animated .icon-bar {
	z-index: 999999;
	background-color: #fca311;
}

.animated .top {
	-webkit-transform: translateY(3px) rotateZ(45deg);
	-moz-transform: translateY(3px) rotateZ(45deg);
	-ms-transform: translateY(3px) rotateZ(45deg);
	-o-transform: translateY(3px) rotateZ(45deg);
	transform: translateY(3px) rotateZ(45deg);
}

.animated .bottom {
	-webkit-transform: translateY(-11px) rotateZ(-45deg);
	-moz-transform: translateY(-11px) rotateZ(-45deg);
	-ms-transform: translateY(-11px) rotateZ(-45deg);
	-o-transform: translateY(-11px) rotateZ(-45deg);
	transform: translateY(-11px) rotateZ(-45deg);
}

.animated .middle {
	width: 0;
}

/*  */
/*  */
/*  */

/* Remove spacing if container is first item inside prose container */
.prose > .cu-container {
	@apply first:-mt-14;
}

/* Remove top and bottom space added by prose when columns are used inside prose container */
.prose > .cu-column > *,
.prose > .cu-column > * > * {
	@apply first:mt-0 last:mb-0;
}

/* Remove top and bottom space added by prose inside container */
.prose > .cu-container > *,
.prose > .cu-container > * > * {
	@apply first:mt-0 last:mb-0;
}

/* Add spacing when columns and panels are used in some consecutive order */
.cu-container + .cu-column,
.cu-column + .cu-container,
.cu-column + .cu-column,
.cu-panel + .cu-panel,
.cu-column + .cu-panel,
.cu-panel + .cu-column {
	@apply mt-10;
}

.cu-column + .cu-container-white {
	@apply pt-0;
}

/* Add spacing when white container follows non-layout components */
:not(.cu-container):not(.cu-column) + .cu-container-white {
	@apply pt-8;
}

/* Add spacing when grey container follows non-layout components */
:not(.cu-container):not(.cu-column) + .cu-container-grey {
	@apply mt-14;
}

/* Remove spacing on non-layout components that follow container or column */
.cu-container-white + :not(.cu-container):not(.cu-column) {
	@apply mt-0;
}

/* Remove spacing if nested container is last item inside another container */
.cu-container > .cu-container {
	@apply last:-mb-14;
}
